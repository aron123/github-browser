allprojects {
    repositories {
        google()
        jcenter()
    }
}

ext {
    // build params
    androidBuildToolsVersion = "30.0.3"
    androidMinSdkVersion = 26
    androidTargetSdkVersion = 30
    androidCompileSdkVersion = 30


    core_ktx_version = "1.3.2"
    photo_view_version = "2.2.0"
    glide_version = "4.9.0"
    okhttp_version = "4.9.0"
    retrofit_version = "2.9.0"
    picasso_version = "2.71828"
    mapstruct_version = "1.4.2.Final"
    constraint_layout_version = "2.0.4"
    legacy_support_version = "1.0.0"
    livedata_version = "2.3.0"
    viewmodel_version = "2.3.0"

    junit_version = "4.+"
    androidx_junit_version = "1.1.2"
    expresso_version = "3.3.0"

    kotlin_stdlib_version = "1.4.30"
    appcompat_version = "1.2.0"
    material_version = "1.3.0"

    common = [
            kotlinStdLib: "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_stdlib_version",
    ]

    mainApplication = [
            coreKtx: "androidx.core:core-ktx:$core_ktx_version",
            photoView: "com.github.chrisbones:PhotoView:$photo_view_version",
            glide: "com.github.bumptech.glide:glide:$glide_version",
            appcompat: 'androidx.appcompat:appcompat:1.2.0',
            material: 'com.google.android.material:material:1.3.0',
            retrofit: "com.squareup.retrofit2:retrofit:$retrofit_version",
            picasso: "com.squareup.picasso:picasso:$picasso_version",
            constraintLayout: "androidx.constraintlayout:constraintlayout:$constraint_layout_version",
            legacySupport: "androidx.legacy:legacy-support-v4:$legacy_support_version",
            liveData: "androidx.lifecycle:lifecycle-livedata-ktx:$livedata_version",
            viewModel: "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewmodel_version",
    ]
    coreModule = [
    ]
    frameworkModule = [
            okHttp: "com.squareup.okhttp3:okhttp:$okhttp_version",
            retrofit: "com.squareup.retrofit2:retrofit:$retrofit_version",
            retrofitConverterGson: "com.squareup.retrofit2:converter-gson:$retrofit_version",
            mapstruct: "org.mapstruct:mapstruct:$mapstruct_version",
            mapstructProcessor: "org.mapstruct:mapstruct-processor:$mapstruct_version"
    ]
    unitTesting = [
            junit: "junit:junit:$junit_version",
            androidXJunit: "androidx.test.ext:junit:$androidx_junit_version",
            espresso: "androidx.test.espresso:espresso-core:$expresso_version"
    ]
    acceptanceTesting = []
    def globalConfiguration = rootProject.extensions.getByName("ext")
    development = [
            authToken: globalConfiguration.settings.authToken
    ]
}